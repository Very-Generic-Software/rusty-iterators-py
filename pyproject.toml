[tool.poetry]
name = "rusty-iterators"
version = "1.0.0"
description = "Rust-like iterators in Python."
authors = ["Wiktor Nowak <@uncommon-nickname>", "Dawid Sielu≈ºycki <@Leghart>"]
readme = "README.md"
license = "MIT"

include = ["rusty_iterators/**/*"]

[build-system]
requires = ["cython", "poetry-core", "setuptools"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.build]
generate-setup-file = false
script = "build.py"

[tool.poetry.dependencies]
python = ">=3.10,<3.14"

[tool.poetry.group.dev.dependencies]
mypy = "1.13.0"
poethepoet = "0.31.1"
pre-commit = "4.0.1"
pytest = "8.3.4"
pytest-asyncio = "0.24.0"
ruff = "0.8.1"
setuptools = "75.8.0"
cython = "3.0.11"
types-setuptools = "75.8.0.20250110"
tox = "4.24.2"

[tool.ruff]
line-length = 119

[tool.ruff.lint]
extend-select = ["I", "S", "RUF"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "S105", "S106", "S108", "S603", "S607"]
"build.py" = ["I001"]

[tool.mypy]
strict = true

pretty = true
show_error_context = true
show_column_numbers = true
warn_return_any = true
warn_redundant_casts = true
warn_unreachable = true
warn_unused_ignores = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true

enable_error_code = [
    "explicit-override",
    "ignore-without-code",
    "narrowed-type-not-subtype",
    "truthy-bool",
]
exclude = ["build.py"]

[[tool.mypy.overrides]]
module = ["cython.*", "Cython.Build"]
ignore_missing_imports = true

[tool.poe.tasks]
test = "pytest -s -v tests/"
mypy = "mypy . --check"
format = "ruff format --check"
lint = "ruff check"
tox = "tox run"
all.sequence = ["format", "lint", "mypy", "test"]
all.ignore_fail = "return_non_zero"

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.tox]
envlist = ["py310", "py311", "py312", "py313"]

[tool.tox.test]
deps = ["poetry"]
ignore_errors = true
commands = [
    ["poetry run poe format --target_version={envname}"],
    ["poetry run poe lint --target_version={envname}"],
    ["poetry run poe mypy --target_version={envname}"],
    ["poetry run poe test --target_version={envname}"],
]
